asyncapi: 2.6.0
info:
  title: Schemas
  version: 1.0.0
defaultContentType: application/json
components:
  schemas:
    Offering:
      type: object
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
        price:
          type: number
        status:
          type: string
          enum:
            - "active"
            - "retired"
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        color:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - "active"
            - "retired"
    ShoppingBasket:
      type: object
      properties:
        shoppingBasketId:
          type: string
          format: uuid
        customerId:
          type: string
          format: uuid
        totalPrice:
          type: number
          format: double
        totalItemQuantity:
          type: number
          format: integer
        items:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/ShoppingBasketItem"
    ShoppingBasketItem:
        type: object
        properties:
            shoppingBasketItemId:
                type: string
                format: uuid
            shoppingBasketId:
                type: string
                format: uuid
            offeringId:
                type: string
                format: uuid
            quantity:
                type: integer
            totalPrice:
                type: number
                format: float
            itemState:
                type: string
                enum:
                    - "AVAILABLE"
                    - "UNAVAILABLE"
    Payment:
      type: object
      properties:
        PaymentId:
          type: string
        OrderId:
          type: string
        PaymentDate:
          type: string
        CreatedDate:
          type: string
        Status:
          type: integer
          enum:
            - "paid"
            - "unpaid"
    Order:
      type: object
      properties:
        orderId:
          type: string
        customerId:
          type: string
        orderDate:
          type: string
        orderStatus:
          type: string
          enum:
            - "InProcess"
            - "Cancelled"
            - "Completed"
            - "Paid"
        totalPrice:
          type: integer
        items:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/OrderLineItem"
        products:
          type: array
          items:
            type: object
            $ref: "#/components/schemas/ProductQuantity"
    OrderLineItem:
      type: object
      properties:
        shoppingBasketItemId:
          type: string
          format: uuid
        shoppingBasketId:
          type: string
          format: uuid
        offeringId:
          type: string
          format: uuid
        quantity:
          type: integer
        totalPrice:
          type: number
          format: float
        itemState:
          type: string
          enum:
            - "AVAILABLE"
            - "UNAVAILABLE"
    ProductQuantity:
      type: object
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
    Customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        address:
          type: object
          $ref: "#/components/schemas/Address"
        email:
          type: string
        phoneNumber:
          type: string
    Address:
      type: object
      properties:
        street:
          type: string
          format: Name and Number
        number:
          type: string
        postCode:
          type: string
